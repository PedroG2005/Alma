    #!/usr/bin/env php
    <?php

    define('LARAVEL_START', microtime(true));

    /*
    |--------------------------------------------------------------------------
    | Register The Auto Loader
    |--------------------------------------------------------------------------
    |
    | Composer provides a convenient, automatically generated class loader for
    | our application. We just need to utilize it! We'll simply require it
    | into the script here so we don't have to worry about manual loading
    | of any of our classes. It's simply great to be productive.
    |
    */

    require __DIR__.'/vendor/autoload.php';

    /*
    |--------------------------------------------------------------------------
    | Turn On The Lights
    |--------------------------------------------------------------------------
    |
    | We need to illuminate PHP development, so let us turn on the lights.
    | This bootstraps the framework and gets it ready for use, then it
    | will load up this application so that we can run commands against
    | it.
    |
    */

    $app = require_once __DIR__.'/bootstrap/app.php';

    /*
    |--------------------------------------------------------------------------
    | Run The Artisan Application
    |--------------------------------------------------------------------------
    |
    | When we run the console application, the current CLI command will be
    | executed in this console and the response sent back to a terminal
    | or another output device for the user. The commands are defined in
    | the "routes" directory and executed from kernels.
    |
    */

    $kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);

    $status = $kernel->handle(
        $input = new Symfony\Component\Console\Input\ArgvInput,
        new Symfony\Component\Console\Output\ConsoleOutput
    );

    /*
    |--------------------------------------------------------------------------
    | Shutdown The Application
    |--------------------------------------------------------------------------
    |
    | Once Artisan has finished running, we will fire off the shutdown events
    | so that any final work may be done by the application before we shut
    | down the process. This is the last thing to happen to the request.
    |
    */

    $kernel->terminate($input, $status);

    exit($status);
    
